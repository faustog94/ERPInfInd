/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Models.Estructura;
import Models.Producto;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author franco
 */
public class ListarEstructurasUI extends javax.swing.JFrame {

    //Instancia de la clase helper
    ListarEstructurasHelper helper = new ListarEstructurasHelper();
    //Instancias de Producto
    ArrayList<Producto> productos;
    //HashMap que relaciona los Productos de la tabla con la instancia
    HashMap<Integer, Producto> tablaProd = new HashMap<Integer, Producto>();
    //Referencia al modelo de la tabla
    DefaultTableModel tmodelProd, tmodelVer, tmodelEst;
    //Filtros
    boolean soloProdBase;
    boolean soloProdActivos;
    boolean soloEstActivas;
    //Instancia de Producto seleccionado
    Producto prodSeleccionado;
    //Instancias de Estructura
    ArrayList<Estructura> estructuras;
    //Instancias de Estructura correspondiente a la version
    ArrayList<Estructura> estVersion;
    //Listado de versiones
    ArrayList<String> versiones = new ArrayList();
    //Version seleccionada
    String versionSeleccionada = "";

    /**
     * Creates new form ListarEstructurasUI
     */
    public ListarEstructurasUI() {
        initComponents();
        tmodelProd = (DefaultTableModel) tb_productos.getModel();
        tmodelVer = (DefaultTableModel) tb_versiones.getModel();
        tmodelEst = (DefaultTableModel) tb_detalleEstructura.getModel();
        productos = helper.obtenerProductos();
        poblarTablaProductos();
        soloProdBase = false;
        soloProdActivos = false;
        soloEstActivas = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_productos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_versiones = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_detalleEstructura = new javax.swing.JTable();
        chb_soloProdActivos = new javax.swing.JCheckBox();
        chb_prodBase = new javax.swing.JCheckBox();
        chb_soloEstActivas = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Listar estructuras");

        tb_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_productos.setColumnSelectionAllowed(true);
        tb_productos.getTableHeader().setReorderingAllowed(false);
        tb_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_productosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_productos);
        tb_productos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tb_productos.getColumnModel().getColumnCount() > 0) {
            tb_productos.getColumnModel().getColumn(0).setResizable(false);
        }

        tb_versiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Version", "Activa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_versiones.setColumnSelectionAllowed(true);
        tb_versiones.getTableHeader().setReorderingAllowed(false);
        tb_versiones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_versionesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_versiones);
        tb_versiones.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tb_versiones.getColumnModel().getColumnCount() > 0) {
            tb_versiones.getColumnModel().getColumn(0).setResizable(false);
            tb_versiones.getColumnModel().getColumn(1).setResizable(false);
        }

        tb_detalleEstructura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Articulo", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_detalleEstructura.setColumnSelectionAllowed(true);
        tb_detalleEstructura.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tb_detalleEstructura);
        tb_detalleEstructura.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tb_detalleEstructura.getColumnModel().getColumnCount() > 0) {
            tb_detalleEstructura.getColumnModel().getColumn(0).setResizable(false);
            tb_detalleEstructura.getColumnModel().getColumn(1).setResizable(false);
        }

        chb_soloProdActivos.setText("Solo productos activos");
        chb_soloProdActivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chb_soloProdActivosMouseClicked(evt);
            }
        });

        chb_prodBase.setText("Solo productos base");
        chb_prodBase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chb_prodBaseMouseClicked(evt);
            }
        });

        chb_soloEstActivas.setText("Solo estructuras activas");
        chb_soloEstActivas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chb_soloEstActivasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(60, 60, 60)
                        .addComponent(chb_prodBase)
                        .addGap(18, 18, 18)
                        .addComponent(chb_soloProdActivos)
                        .addGap(18, 18, 18)
                        .addComponent(chb_soloEstActivas)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(chb_soloProdActivos)
                    .addComponent(chb_prodBase)
                    .addComponent(chb_soloEstActivas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chb_prodBaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chb_prodBaseMouseClicked
        soloProdBase = chb_prodBase.isSelected();
        poblarTablaProductos();
    }//GEN-LAST:event_chb_prodBaseMouseClicked

    private void chb_soloProdActivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chb_soloProdActivosMouseClicked
        soloProdActivos = chb_soloProdActivos.isSelected();
        poblarTablaProductos();
    }//GEN-LAST:event_chb_soloProdActivosMouseClicked

    private void tb_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_productosMouseClicked
        prodSeleccionado = tablaProd.get(tb_productos.getSelectedRow());
        poblarTablaVersiones();
    }//GEN-LAST:event_tb_productosMouseClicked

    private void chb_soloEstActivasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chb_soloEstActivasMouseClicked
        soloEstActivas = chb_soloEstActivas.isSelected();
        poblarTablaVersiones();
    }//GEN-LAST:event_chb_soloEstActivasMouseClicked

    private void tb_versionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_versionesMouseClicked
        versionSeleccionada = String.valueOf(tb_versiones.getValueAt(tb_versiones.getSelectedRow(), 0));
        poblarTablaEst();
    }//GEN-LAST:event_tb_versionesMouseClicked

    private void poblarTablaProductos() {
        tmodelProd.setRowCount(0); //limpio las tablas
        tmodelVer.setRowCount(0);
        tmodelEst.setRowCount(0);
        int row = 0;
        for (Producto prod : productos) {
            if (soloProdBase == false || prod.getIdTipoProducto() == 1) { //Si no está seleccionado solo productos base, muestra todos, sino solo muestra aquellos de tipo 1 (base)
                if (soloProdActivos == false || soloProdActivos == prod.isActivo()) {
                    tablaProd.put(row, prod);
                    Object[] fila = new Object[]{prod.getCodProducto() + " - " + prod.getDescripcion()};
                    tmodelProd.addRow(fila);
                    row++;
                }
            }
        }
    }

    private void poblarTablaVersiones() {
        tmodelVer.setRowCount(0);
        tmodelEst.setRowCount(0);
        if (prodSeleccionado == null) { //rompo la ejecución si se ejecuta el método antes de seleccionar un prod
            return;
        }

        //Busco toda la información
        estructuras = helper.obtenerVersionesEstructura(prodSeleccionado.getIdProducto());
        versiones.clear();
        if (estructuras.size() == 0) {
            JOptionPane.showMessageDialog(this, "El producto no tiene estructuras");
            return;
        }
        for (Estructura est : estructuras) {
            if (!versiones.contains(est.getVersion())) {
                if (soloEstActivas == false || est.isActivo() == soloEstActivas) {
                    versiones.add(est.getVersion());
                    Object[] row = new Object[]{est.getVersion(), est.isActivo()};
                    tmodelVer.addRow(row);
                }
            }
        }
    }
    
    private void poblarTablaEst(){
        tmodelEst.setRowCount(0);
        estVersion = helper.obtenerEstructurasVersion(prodSeleccionado.getIdProducto(), versionSeleccionada);
        for (Estructura est : estVersion){
            Object[] row = new Object[]{helper.obtenerArt(est.getIdArticulo()), est.getCantidad()};
            tmodelEst.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chb_prodBase;
    private javax.swing.JCheckBox chb_soloEstActivas;
    private javax.swing.JCheckBox chb_soloProdActivos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tb_detalleEstructura;
    private javax.swing.JTable tb_productos;
    private javax.swing.JTable tb_versiones;
    // End of variables declaration//GEN-END:variables
}
